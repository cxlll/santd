!function(n){function a(a){for(var t,o,c=a[0],u=a[1],l=a[2],r=0,k=[];r<c.length;r++)o=c[r],Object.prototype.hasOwnProperty.call(p,o)&&p[o]&&k.push(p[o][0]),p[o]=0;for(t in u)Object.prototype.hasOwnProperty.call(u,t)&&(n[t]=u[t]);for(i&&i(a);k.length;)k.shift()();return e.push.apply(e,l||[]),s()}function s(){for(var n,a=0;a<e.length;a++){for(var s=e[a],t=!0,c=1;c<s.length;c++){var u=s[c];0!==p[u]&&(t=!1)}t&&(e.splice(a--,1),n=o(o.s=s[0]))}return n}var t={},p={31:0,114:0},e=[];function o(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return n[a].call(s.exports,s,s.exports,o),s.l=!0,s.exports}o.e=function(){return Promise.resolve()},o.m=n,o.c=t,o.d=function(n,a,s){o.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:s})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,a){if(1&a&&(n=o(n)),8&a)return n;if(4&a&&"object"==typeof n&&n&&n.__esModule)return n;var s=Object.create(null);if(o.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var t in n)o.d(s,t,function(a){return n[a]}.bind(null,t));return s},o.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(a,"a",a),a},o.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},o.p="/santd/";var c=window.webpackJsonp=window.webpackJsonp||[],u=c.push.bind(c);c.push=a,c=c.slice();for(var l=0;l<c.length;l++)a(c[l]);var i=u;e.push([3441,0,1]),s()}({1465:function(n,a,s){var t=s(3),p=s(2648),e=s(422).default;n.exports=s(422),n.exports.default=t(e,p,[])},1466:function(n,a,s){var t=s(3),p=s(2649),e=s(423).default;n.exports=s(423),n.exports.default=t(e,p,[])},1467:function(n,a,s){var t=s(3),p=s(2650),e=s(424).default;n.exports=s(424),n.exports.default=t(e,p,[])},1468:function(n,a,s){var t=s(3),p=s(2651),e=s(425).default;n.exports=s(425),n.exports.default=t(e,p,[])},1469:function(n,a,s){var t=s(3),p=s(2652),e=s(426).default;n.exports=s(426),n.exports.default=t(e,p,[])},1470:function(n,a,s){var t=s(3),p=s(2653),e=s(427).default;n.exports=s(427),n.exports.default=t(e,p,[])},1471:function(n,a,s){var t=s(3),p=s(2654),e=s(428).default;n.exports=s(428),n.exports.default=t(e,p,[])},1472:function(n,a,s){var t=s(3),p=s(2655),e=s(429).default;n.exports=s(429),n.exports.default=t(e,p,[])},1473:function(n,a,s){var t=s(3),p=s(2656),e=s(430).default;n.exports=s(430),n.exports.default=t(e,p,[])},1474:function(n,a,s){var t=s(3),p=s(2657),e=s(431).default;n.exports=s(431),n.exports.default=t(e,p,[])},1475:function(n,a,s){var t=s(3),p=s(2658),e=s(432).default;n.exports=s(432),n.exports.default=t(e,p,[])},1476:function(n,a,s){var t=s(3),p=s(2659),e=s(433).default;n.exports=s(433),n.exports.default=t(e,p,[])},2648:function(n,a){n.exports=' <div class="content"><div class="markdown"><h2 id="api">API</h2> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>autoFocus</td> <td>自动获取焦点</td> <td>boolean</td> <td>false</td> </tr> <tr> <td>defaultValue</td> <td>初始值</td> <td>number</td> <td>-</td> </tr> <tr> <td>disabled</td> <td>禁用</td> <td>boolean</td> <td>false</td> </tr> <tr> <td>formatter</td> <td>指定输入框展示值的格式</td> <td>function(value: number | string): string</td> <td>-</td> </tr> <tr> <td>max</td> <td>最大值</td> <td>number</td> <td>-</td> </tr> <tr> <td>min</td> <td>最小值</td> <td>number</td> <td>-</td> </tr> <tr> <td>parser</td> <td>指定从 formatter 里转换回数字的方式，和 formatter 搭配使用</td> <td>function( string): number</td> </tr> <tr> <td>precision</td> <td>数值精度</td> <td>number</td> <td>-</td> </tr> <tr> <td>decimalSeparator</td> <td>小数点</td> <td>string</td> <td>-</td> </tr> <tr> <td>size</td> <td>输入框大小</td> <td>string</td> <td>-</td> </tr> <tr> <td>step</td> <td>每次改变步数，可以为小数</td> <td>number | string</td> <td>1</td> </tr> <tr> <td>value</td> <td>当前值</td> <td>number</td> <td>-</td> </tr> <tr> <td>on-change</td> <td>当input中的数值发生变化时触发</td> <td>function(value: number | string)</td> <td></td> </tr> <tr> <td>on-pressEnter</td> <td>按下回车的回调</td> <td>function(e)</td> <td></td> </tr> </tbody> </table> <h3 id="%E6%96%B9%E6%B3%95">方法</h3> <table> <thead> <tr> <th>名称</th> <th>描述</th> </tr> </thead> <tbody> <tr> <td>blur()</td> <td>移除焦点</td> </tr> <tr> <td>focus()</td> <td>获取焦点</td> </tr> </tbody> </table> </div></div> '},2649:function(n,a){n.exports=' <div class="content"><div class="markdown"><h1 id="inputnumber-%E6%95%B0%E5%AD%97%E8%BE%93%E5%85%A5%E6%A1%86">InputNumber 数字输入框</h1> <p>通过鼠标或键盘，输入范围内的数值。</p> <h2 id="%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8">何时使用</h2> <p>当需要获取标准数值时。</p> <h2 id="%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA">代码演示</h2> </div></div> '},2650:function(n,a){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%9F%BA%E6%9C%AC">基本</h4> <p>数字输入框。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-input-number</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>InputNumber<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-input-number\'</span><span class="token operator">:</span> InputNumber\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'changed: \'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2651:function(n,a){n.exports=' <div> <s-input-number min="1" max="10" defaultValue="3" on-change="onChange"></s-input-number> </div> '},2652:function(n,a){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E4%B8%8D%E5%8F%AF%E7%94%A8">不可用</h4> <p>点击按钮切换可用状态。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-input-number</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Toggle disabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>InputNumber<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-input-number\'</span><span class="token operator">:</span> InputNumber<span class="token punctuation">,</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            disabled<span class="token operator">:</span> <span class="token boolean">true</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'disabled\'</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'disabled\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2653:function(n,a){n.exports=' <div> <s-input-number min="1" max="10" defaultValue="3" disabled="{{disabled}}"></s-input-number> <br/><br/> <s-button type="primary" on-click="toggle">Toggle disabled</s-button> </div> '},2654:function(n,a){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="size">size</h4> <p>三种大小的数字输入框，当 size 分别为 <code>large</code> 和 <code>small</code> 时，输入框高度为 <code>40px</code> 和 <code>24px</code> ，默认高度为 <code>32px</code>。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-input-number</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-input-number</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-input-number</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>InputNumber<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-input-number\'</span><span class="token operator">:</span> InputNumber\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'changed: \'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2655:function(n,a){n.exports=' <div> <s-input-number min="1" max="10" defaultValue="3" on-change="onChange" size="large"></s-input-number> <s-input-number min="1" max="10" defaultValue="3" on-change="onChange"></s-input-number> <s-input-number min="1" max="10" defaultValue="3" on-change="onChange" size="small"></s-input-number> </div> '},2656:function(n,a){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%B0%8F%E6%95%B0">小数</h4> <p>和原生的数字输入框一样，value 的精度由 step 的小数位数决定。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.1<span class="token punctuation">"</span></span> <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-input-number</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>InputNumber<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-input-number\'</span><span class="token operator">:</span> InputNumber\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'changed: \'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2657:function(n,a){n.exports=' <div> <s-input-number min="0" max="10" step="0.1" on-change="onChange"></s-input-number> </div> '},2658:function(n,a){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%B1%95%E7%A4%BA">格式化展示</h4> <p>通过 <code>formatter</code> 格式化数字，以展示具有具体含义的数据，往往需要配合 <code>parser</code> 一起使用。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span>\n            <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;1000}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;formatterTwo}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">parser</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;parserTwo}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-input-number</span>\n            <span class="token attr-name">defaultValue</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;100}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;0}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;100}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">formatter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;formatter}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">parser</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;parser}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>onChange<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>InputNumber<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-input-number\'</span><span class="token operator">:</span> InputNumber\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            <span class="token function">formatter</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">parser</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">\'%\'</span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">formatterTwo</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">$ </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\B(?=(\\d{3})+(?!\\d))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">\',\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">parserTwo</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\$\\s?|(,*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'changed: \'</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2659:function(n,a){n.exports=' <div> <s-input-number defaultValue="{{1000}}" formatter="{{formatterTwo}}" parser="{{parserTwo}}" on-change="onChange"/> <s-input-number defaultValue="{{100}}" min="{{0}}" max="{{100}}" formatter="{{formatter}}" parser="{{parser}}" on-change="onChange"/> </div> '},3441:function(n,a,s){"use strict";s.r(a);var t=s(1),p=s.n(t),e=s(1465),o=s.n(e),c=s(1466),u=s.n(c),l=s(1467),i=s.n(l),r=s(1469),k=s.n(r),d=s(1471),g=s.n(d),m=s(1473),f=s.n(m),v=s(1475),b=s.n(v);a.default=p.a.defineComponent({components:{readme:o.a,head:u.a,basic:i.a,disable:k.a,size:g.a,number:f.a,format:b.a},template:"\n        <div>\n            <head/>\n            <basic/>\n            <disable/>\n            <size/>\n            <number/>\n            <format/>\n            <readme/>\n        </div>\n    "})},422:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return c}));var t,p,e,o=s(2);class c extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"API",hash:"api",children:[{level:3,title:"方法",hash:"%E6%96%B9%E6%B3%95"}]}]})}}e={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},423:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return c}));var t,p,e,o=s(2);class c extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"何时使用",hash:"%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8"},{level:2,title:"代码演示",hash:"%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA"}]})}}e={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},424:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return l}));var t,p,e,o=s(2),c=s(1468),u=s.n(c);class l extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=l,p="components",e={"code-preview-0":u.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},425:function(n,a,s){"use strict";s.r(a);var t=s(0);a.default={components:{"s-input-number":t.B},onChange(n){console.log("changed: ",n)}}},426:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return l}));var t,p,e,o=s(2),c=s(1470),u=s.n(c);class l extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=l,p="components",e={"code-preview-0":u.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},427:function(n,a,s){"use strict";s.r(a);var t=s(0);a.default={components:{"s-input-number":t.B,"s-button":t.i},initData:()=>({disabled:!0}),toggle(){this.data.set("disabled",!this.data.get("disabled"))}}},428:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return l}));var t,p,e,o=s(2),c=s(1472),u=s.n(c);class l extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=l,p="components",e={"code-preview-0":u.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},429:function(n,a,s){"use strict";s.r(a);var t=s(0);a.default={components:{"s-input-number":t.B},onChange(n){console.log("changed: ",n)}}},430:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return l}));var t,p,e,o=s(2),c=s(1474),u=s.n(c);class l extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=l,p="components",e={"code-preview-0":u.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},431:function(n,a,s){"use strict";s.r(a);var t=s(0);a.default={components:{"s-input-number":t.B},onChange(n){console.log("changed: ",n)}}},432:function(n,a,s){"use strict";s.r(a),function(n){s.d(a,"default",(function(){return l}));var t,p,e,o=s(2),c=s(1476),u=s.n(c);class l extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=l,p="components",e={"code-preview-0":u.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,s(4))},433:function(n,a,s){"use strict";s.r(a);var t=s(0);a.default={components:{"s-input-number":t.B},initData:()=>({formatter:n=>n+"%",parser:n=>n.replace("%",""),formatterTwo:n=>("$ "+n).replace(/\B(?=(\d{3})+(?!\d))/g,","),parserTwo:n=>n.replace(/\$\s?|(,*)/g,"")}),onChange(n){console.log("changed: ",n)}}}});