!function(n){function s(s){for(var t,o,c=s[0],l=s[1],u=s[2],k=0,r=[];k<c.length;k++)o=c[k],Object.prototype.hasOwnProperty.call(p,o)&&p[o]&&r.push(p[o][0]),p[o]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(n[t]=l[t]);for(i&&i(s);r.length;)r.shift()();return e.push.apply(e,u||[]),a()}function a(){for(var n,s=0;s<e.length;s++){for(var a=e[s],t=!0,c=1;c<a.length;c++){var l=a[c];0!==p[l]&&(t=!1)}t&&(e.splice(s--,1),n=o(o.s=a[0]))}return n}var t={},p={62:0},e=[];function o(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return n[s].call(a.exports,a,a.exports,o),a.l=!0,a.exports}o.e=function(){return Promise.resolve()},o.m=n,o.c=t,o.d=function(n,s,a){o.o(n,s)||Object.defineProperty(n,s,{enumerable:!0,get:a})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,s){if(1&s&&(n=o(n)),8&s)return n;if(4&s&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&s&&"string"!=typeof n)for(var t in n)o.d(a,t,function(s){return n[s]}.bind(null,t));return a},o.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(s,"a",s),s},o.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},o.p="/santd/";var c=window.webpackJsonp=window.webpackJsonp||[],l=c.push.bind(c);c.push=s,c=c.slice();for(var u=0;u<c.length;u++)s(c[u]);var i=l;e.push([3452,0,1]),a()}({1638:function(n,s,a){var t=a(3),p=a(2828),e=a(594).default;n.exports=a(594),n.exports.default=t(e,p,[])},1639:function(n,s,a){var t=a(3),p=a(2829),e=a(595).default;n.exports=a(595),n.exports.default=t(e,p,[])},1640:function(n,s,a){var t=a(3),p=a(2830),e=a(596).default;n.exports=a(596),n.exports.default=t(e,p,[])},1641:function(n,s,a){var t=a(3),p=a(2831),e=a(597).default;n.exports=a(597),n.exports.default=t(e,p,[])},1642:function(n,s,a){var t=a(3),p=a(2832),e=a(598).default;n.exports=a(598),n.exports.default=t(e,p,[])},1643:function(n,s,a){var t=a(3),p=a(2833),e=a(599).default;n.exports=a(599),n.exports.default=t(e,p,[])},1644:function(n,s,a){var t=a(3),p=a(2834),e=a(600).default;n.exports=a(600),n.exports.default=t(e,p,[])},1645:function(n,s,a){var t=a(3),p=a(2835),e=a(601).default;n.exports=a(601),n.exports.default=t(e,p,[])},1646:function(n,s,a){var t=a(3),p=a(2836),e=a(602).default;n.exports=a(602),n.exports.default=t(e,p,[])},1647:function(n,s,a){var t=a(3),p=a(2837),e=a(603).default;n.exports=a(603),n.exports.default=t(e,p,[])},1648:function(n,s,a){var t=a(3),p=a(2838),e=a(604).default;n.exports=a(604),n.exports.default=t(e,p,[])},1649:function(n,s,a){var t=a(3),p=a(2842),e=a(605).default;n.exports=a(605),n.exports.default=t(e,p,[])},1650:function(n,s,a){var t=a(3),p=a(2843),e=a(606).default;n.exports=a(606),n.exports.default=t(e,p,[])},1651:function(n,s,a){var t=a(3),p=a(2844),e=a(607).default;n.exports=a(607),n.exports.default=t(e,p,[])},2828:function(n,s){n.exports=" <div class=\"content\"><div class=\"markdown\"><h2 id=\"api\">API</h2> <h3 id=\"transfer\">Transfer</h3> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>dataSource</td> <td>数据源，其中的数据将会被渲染到左边一栏中，<code>targetKeys</code> 中指定的除外。</td> <td>TransferItem[]</td> <td><code>[]</code></td> </tr> <tr> <td>disabled</td> <td>是否禁用</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>filterOption</td> <td>接收 <code>inputValue</code> <code>option</code> 两个参数，当 <code>option</code> 符合筛选条件时，应返回 <code>true</code>，反之则返回 <code>false</code>。</td> <td>(inputValue, option): boolean</td> <td>-</td> </tr> <tr> <td>footer</td> <td>底部插槽</td> <td>slot</td> <td>-</td> </tr> <tr> <td>listStyle</td> <td>两个穿梭框的自定义样式</td> <td>object</td> <td>-</td> </tr> <tr> <td>locale</td> <td>各种语言</td> <td>object</td> <td><code>{itemUnit: '项', itemsUnit: '项' searchPlaceholder: '请输入搜索内容'}</code></td> </tr> <tr> <td>operations</td> <td>操作文案集合，顺序从上至下</td> <td>string[]</td> <td><code>\\['&gt;', '&lt;']</code></td> </tr> <tr> <td>render</td> <td>每行数据渲染插槽</td> <td>slot</td> <td>-</td> </tr> <tr> <td>leftRenderList</td> <td>左边栏整体渲染插槽</td> <td>slot</td> <td>-</td> </tr> <tr> <td>rightRenderList</td> <td>右边栏整体渲染插槽</td> <td>slot</td> <td>-</td> </tr> <tr> <td>selectedKeys</td> <td>设置哪些项应该被选中</td> <td>string[]</td> <td><code>\\[]</code></td> </tr> <tr> <td>showSearch</td> <td>是否显示搜索框</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>showSelectAll</td> <td>是否显示全选勾选框</td> <td>boolean</td> <td><code>true</code></td> </tr> <tr> <td>targetKeys</td> <td>显示在右侧框数据的key集合</td> <td>string[]</td> <td><code>\\[]</code></td> </tr> <tr> <td>titles</td> <td>标题集合，顺序从左至右</td> <td>string[]</td> <td><code>\\['', '']</code></td> </tr> <tr> <td>on-change</td> <td>选项在两栏之间转移时的回调函数</td> <td>({targetKeys, direction, moveKeys}): void</td> <td>-</td> </tr> <tr> <td>on-scroll</td> <td>选项列表滚动时的回调函数</td> <td>({direction, event}): void</td> <td>-</td> </tr> <tr> <td>on-search</td> <td>搜索框内容时改变时的回调函数</td> <td>({direction: 'left'|'right', value: string}): void</td> <td>-</td> </tr> <tr> <td>on-selectChange</td> <td>选中项发生改变时的回调函数</td> <td>({sourceSelectedKeys, targetSelectedKeys}): void</td> <td>-</td> </tr> </tbody> </table> <h3 id=\"leftrenderlist-%26-rightrenderlist-props\">leftRenderList &amp; rightRenderList Props</h3> <p>Transfer支持leftRenderList和rightRenderList插槽来自定义渲染列表，在组件里面可以使用以下参数：</p> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> </tr> </thead> <tbody> <tr> <td>direction</td> <td>渲染列表的方向</td> <td>'left' | 'right'</td> </tr> <tr> <td>disabled</td> <td>是否禁用列表</td> <td>boolean</td> </tr> <tr> <td>filteredItems</td> <td>过滤后的数据</td> <td>TransferItem[]</td> </tr> <tr> <td>selectedKeys</td> <td>选中的条目</td> <td>string[]</td> </tr> <tr> <td>itemSelect</td> <td>勾选条目</td> <td>(key: string, selected: boolean)</td> </tr> <tr> <td>itemSelectAll</td> <td>勾选一组条目</td> <td>(keys: string[], selected: boolean)</td> </tr> </tbody> </table> </div></div> "},2829:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95">基本用法</h4> <p>最基本的用法，展示了 <code>dataSource</code>、<code>targetKeys</code>、每行的渲染函数 <code>render</code> 以及回调函数 <code>on-change</code> <code>on-selectChange</code> <code>on-scroll</code>的用法</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfer</span>\n            <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;mockData}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">titles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;[<span class="token punctuation">\'</span>Source<span class="token punctuation">\'</span>, <span class="token punctuation">\'</span>Target<span class="token punctuation">\'</span>]}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-selectChange</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleSelectChange<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-scroll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleScroll<span class="token punctuation">"</span></span>\n            <span class="token attr-name">selectedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;selectedKeys}}<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>render<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;item.title}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-transfer</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-switch</span>\n            <span class="token attr-name">checkedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleDisable<span class="token punctuation">"</span></span>\n            <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 16px</span><span class="token punctuation">"</span></span></span>\n        <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n\n<span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    mockData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">description of content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        disabled<span class="token operator">:</span> i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">1</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> oriTargetKeys <span class="token operator">=</span> mockData\n    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token operator">+</span>item<span class="token punctuation">.</span>key <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Transfer<span class="token punctuation">,</span> Switch<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            disabled<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            mockData<span class="token operator">:</span> mockData<span class="token punctuation">,</span>\n            targetKeys<span class="token operator">:</span> oriTargetKeys<span class="token punctuation">,</span>\n            selectedKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-transfer\'</span><span class="token operator">:</span> Transfer<span class="token punctuation">,</span>\n        <span class="token string">\'s-switch\'</span><span class="token operator">:</span> Switch\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>targetKeys<span class="token punctuation">,</span> direction<span class="token punctuation">,</span> moveKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'targetKeys: \'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'direction: \'</span><span class="token punctuation">,</span> direction<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'moveKeys: \'</span><span class="token punctuation">,</span> moveKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleSearch</span><span class="token punctuation">(</span><span class="token parameter">param</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'on-search\'</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleSelectChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>sourceSelectedKeys<span class="token punctuation">,</span> targetSelectedKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'selectedKeys\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>sourceSelectedKeys<span class="token punctuation">,</span> <span class="token operator">...</span>targetSelectedKeys<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'sourceSelectedKeys: \'</span><span class="token punctuation">,</span> sourceSelectedKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'targetSelectedKeys: \'</span><span class="token punctuation">,</span> targetSelectedKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleScroll</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>direction<span class="token punctuation">,</span> e<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'direction: \'</span><span class="token punctuation">,</span> direction<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'target: \'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleDisable</span><span class="token punctuation">(</span><span class="token parameter">disable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'disabled\'</span><span class="token punctuation">,</span> disable<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2830:function(n,s){n.exports=' <div> <s-transfer disabled="{{disabled}}" dataSource="{{mockData}}" targetKeys="{{targetKeys}}" titles="{{[\'Source\', \'Target\']}}" on-selectChange="handleSelectChange" on-change="handleChange" on-scroll="handleScroll" selectedKeys="{{selectedKeys}}"> <span slot="render">{{item.title}}</span> </s-transfer> <s-switch checkedChildren="disabled" unCheckedChildren="disabled" checked="{{disabled}}" on-change="handleDisable" style="margin-top:16px"/> </div> '},2831:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%B8%A6%E6%90%9C%E7%B4%A2%E6%A1%86">带搜索框</h4> <p>带搜索框的穿梭框，可以自定义搜索函数。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfer</span>\n            <span class="token attr-name">dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;mockData}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">filterOption</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;filterOption}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">showSearch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;true}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">locale</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;locale}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-search</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleSearch<span class="token punctuation">"</span></span>\n        <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Transfer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            mockData<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            targetKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">filterOption</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">inputValue<span class="token punctuation">,</span> option</span><span class="token punctuation">)</span> <span class="token operator">=></span> option<span class="token punctuation">.</span>description<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>\n            locale<span class="token operator">:</span> <span class="token punctuation">{</span>itemUnit<span class="token operator">:</span> <span class="token string">\'项\'</span><span class="token punctuation">,</span> itemsUnit<span class="token operator">:</span> <span class="token string">\'项\'</span><span class="token punctuation">,</span> searchPlaceholder<span class="token operator">:</span> <span class="token string">\'请输入搜索内容\'</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> targetKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">description of content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                chosen<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>chosen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                targetKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            mockData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'mockData\'</span><span class="token punctuation">,</span> mockData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-transfer\'</span><span class="token operator">:</span> Transfer\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleSearch</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>direction<span class="token punctuation">,</span> value<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'search: \'</span><span class="token punctuation">,</span> direction<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2832:function(n,s){n.exports=' <div> <s-transfer dataSource="{{mockData}}" targetKeys="{{targetKeys}}" filterOption="{{filterOption}}" showSearch="{{true}}" locale="{{locale}}" on-change="handleChange" on-search="handleSearch"/> </div> '},2833:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95">高级用法</h4> <p>穿梭框高级用法，可配置操作文案，可定制宽高，可对底部进行自定义渲染。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfer</span>\n            <span class="token attr-name">dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;mockData}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span>\n            <span class="token attr-name">operations</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;[<span class="token punctuation">\'</span>to Right<span class="token punctuation">\'</span>, <span class="token punctuation">\'</span>to Left<span class="token punctuation">\'</span>]}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">listStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width: 250px; height: 300px;<span class="token punctuation">"</span></span>\n            <span class="token attr-name">showSearch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;true}}<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span> <span class="token property">margin</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getMock<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                    reload\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-transfer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> san <span class="token keyword">from</span> <span class="token string">\'san\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Transfer<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            mockData<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            targetKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> targetKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">description of content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                chosen<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>chosen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                targetKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            mockData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'mockData\'</span><span class="token punctuation">,</span> mockData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-transfer\'</span><span class="token operator">:</span> Transfer<span class="token punctuation">,</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2834:function(n,s){n.exports=' <div> <s-transfer dataSource="{{mockData}}" targetKeys="{{targetKeys}}" on-change="handleChange" operations="{{[\'to Right\', \'to Left\']}}" listStyle="width: 250px; height: 300px;" showSearch="{{true}}"> <span slot="footer"> <s-button size="small" style="float:right;margin:5px" on-click="getMock"> reload </s-button> </span> </s-transfer> </div> '},2835:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B8%B2%E6%9F%93%E8%A1%8C%E6%95%B0%E6%8D%AE">自定义渲染行数据</h4> <p>自定义渲染每一个 Transfer Item，可用于渲染复杂数据。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfer</span>\n            <span class="token attr-name">dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;mockData}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">listStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;listStyle}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-item<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>render<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;item.title}} - &#123;&#123;item.description}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-transfer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> san <span class="token keyword">from</span> <span class="token string">\'san\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Transfer<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            mockData<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            targetKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            listStyle<span class="token operator">:</span> <span class="token string">\'width: 250px; height: 300px;\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">attached</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">getMock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> targetKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>\n                key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">description of content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n                chosen<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>chosen<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                targetKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            mockData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'mockData\'</span><span class="token punctuation">,</span> mockData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-transfer\'</span><span class="token operator">:</span> Transfer\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2836:function(n,s){n.exports=' <div> <s-transfer dataSource="{{mockData}}" listStyle="{{listStyle}}" targetKeys="{{targetKeys}}" on-change="handleChange"> <span class="custom-item" slot="render">{{item.title}} - {{item.description}}</span> </s-transfer> </div> '},2837:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E8%A1%A8%E6%A0%BC%E7%A9%BF%E6%A2%AD%E6%A1%86">表格穿梭框</h4> <p>使用 Table 组件作为自定义渲染列表。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfer</span>\n            <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;mockData}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">sourceKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;sourceKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">showSelectAll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;false}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">showSearch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;showSearch}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">filterOption</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;filterOption}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfertable</span>\n                <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>leftRenderList<span class="token punctuation">"</span></span>\n                <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;direction}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">filteredItems</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;filteredItems}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">selectedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;selectedKeys}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">itemSelect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;itemSelect}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">itemSelectAll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;itemSelectAll}}<span class="token punctuation">"</span></span>\n            <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-transfertable</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfertable</span>\n                <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightRenderList<span class="token punctuation">"</span></span>\n                <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;direction}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">filteredItems</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;filteredItems}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">selectedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;selectedKeys}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n            <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-transfer</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-switch</span>\n            <span class="token attr-name">checkedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span>\n            <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleDisable<span class="token punctuation">"</span></span>\n            <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 16px</span><span class="token punctuation">"</span></span></span>\n        <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-switch</span>\n            <span class="token attr-name">checkedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showSearch<span class="token punctuation">"</span></span>\n            <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showSearch<span class="token punctuation">"</span></span>\n            <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;showSearch}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleShowSearch<span class="token punctuation">"</span></span>\n            <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token style language-css"><span class="token property">margin-top</span><span class="token punctuation">:</span> 16px</span><span class="token punctuation">"</span></span></span>\n        <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> mockTags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'cat\'</span><span class="token punctuation">,</span> <span class="token string">\'dog\'</span><span class="token punctuation">,</span> <span class="token string">\'bird\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> mockData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    mockData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        title<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">description of content</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n        disabled<span class="token operator">:</span> i <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>\n        tag<span class="token operator">:</span> mockTags<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> originTargetKeys <span class="token operator">=</span> mockData<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token operator">+</span>item<span class="token punctuation">.</span>key <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> leftTableColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'tag\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'Tag\'</span><span class="token punctuation">,</span>\n    scopedSlots<span class="token operator">:</span> <span class="token punctuation">{</span>render<span class="token operator">:</span> <span class="token string">\'tag\'</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'description\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'Description\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> rightTableColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    dataIndex<span class="token operator">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'Name\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> san <span class="token keyword">from</span> <span class="token string">\'san\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> difference <span class="token keyword">from</span> <span class="token string">\'lodash/difference\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Transfer<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> transferTable <span class="token operator">=</span> san<span class="token punctuation">.</span><span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-table\'</span><span class="token operator">:</span> Table<span class="token punctuation">,</span>\n        <span class="token string">\'s-tag\'</span><span class="token operator">:</span> Tag\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            rowSelection<span class="token operator">:</span> <span class="token punctuation">{</span>\n                selectedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                handleSelect<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSelectItem</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                handleSelectAll<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleSelectAll</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token function">getCheckboxProps</span><span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                        disabled<span class="token operator">:</span> record<span class="token punctuation">.</span>disabled\n                    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">inited</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">\'selectedKeys\'</span><span class="token punctuation">,</span> <span class="token parameter">val</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'rowSelection.selectedRowKeys\'</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span><span class="token string">\'disabled\'</span><span class="token punctuation">,</span> <span class="token parameter">val</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'rowSelection.getCheckboxProps\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> \n                <span class="token keyword">return</span> <span class="token punctuation">{</span> \n                    disabled<span class="token operator">:</span> val <span class="token operator">||</span> record<span class="token punctuation">.</span>disabled\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    computed<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">columns</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> direction <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'direction\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> direction <span class="token operator">===</span> <span class="token string">\'left\'</span> <span class="token operator">?</span> leftTableColumns <span class="token operator">:</span> rightTableColumns<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleSelectAll</span><span class="token punctuation">(</span><span class="token parameter">selectedRows<span class="token punctuation">,</span> checked</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> itemSelectAll <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'itemSelectAll\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">itemSelectAll</span><span class="token punctuation">(</span>selectedRows<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> treeSelectedKeys <span class="token operator">=</span> selectedRows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>key<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'santd_transfer_itemSelectAll\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>selectedKeys<span class="token operator">:</span> treeSelectedKeys<span class="token punctuation">,</span> checkAll<span class="token operator">:</span> checked<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleSelectItem</span><span class="token punctuation">(</span><span class="token parameter">record<span class="token punctuation">,</span> checked</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> itemSelect <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'itemSelect\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">itemSelect</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">,</span> checked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'santd_transfer_itemSelect\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>selectedKey<span class="token operator">:</span> record<span class="token punctuation">.</span>key<span class="token punctuation">,</span> checked<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>\n        &lt;s-table\n            columns="&#123;&#123;columns}}"\n            data="&#123;&#123;filteredItems}}"\n            size="small"\n            rowSelection="&#123;&#123;rowSelection}}"\n        >\n            &lt;span slot="tag">\n                &lt;s-tag>&#123;&#123;text}}&lt;/s-tag>\n            &lt;/span>\n        &lt;/s-table>\n    &lt;/div></span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            disabled<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            showSearch<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            mockData<span class="token operator">:</span> mockData<span class="token punctuation">,</span>\n            targetKeys<span class="token operator">:</span> originTargetKeys<span class="token punctuation">,</span>\n            selectedKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token function">filterOption</span><span class="token punctuation">(</span><span class="token parameter">inputValue<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> item<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> item<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>inputValue<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">itemSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> ischecked</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'itemSelect_key\'</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'itemSelect_ischecked\'</span><span class="token punctuation">,</span> ischecked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">itemSelectAll</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> ischecked</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'itemSelectAll_key\'</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'itemSelectAll_ischecked\'</span><span class="token punctuation">,</span> ischecked<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-transfer\'</span><span class="token operator">:</span> Transfer<span class="token punctuation">,</span>\n        <span class="token string">\'s-switch\'</span><span class="token operator">:</span> Switch<span class="token punctuation">,</span>\n        <span class="token string">\'s-transfertable\'</span><span class="token operator">:</span> transferTable\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'selectedKeys\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleDisable</span><span class="token punctuation">(</span><span class="token parameter">disable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'disabled\'</span><span class="token punctuation">,</span> disable<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleShowSearch</span><span class="token punctuation">(</span><span class="token parameter">disable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'showSearch\'</span><span class="token punctuation">,</span> disable<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2838:function(n,s){n.exports=' <div> <s-transfer disabled="{{disabled}}" dataSource="{{mockData}}" sourceKeys="{{sourceKeys}}" targetKeys="{{targetKeys}}" showSelectAll="{{false}}" showSearch="{{showSearch}}" filterOption="{{filterOption}}" on-change="handleChange"> <s-transfertable slot="leftRenderList" direction="{{direction}}" filteredItems="{{filteredItems}}" selectedKeys="{{selectedKeys}}" disabled="{{disabled}}" itemSelect="{{itemSelect}}" itemSelectAll="{{itemSelectAll}}"> </s-transfertable> <s-transfertable slot="rightRenderList" direction="{{direction}}" filteredItems="{{filteredItems}}" selectedKeys="{{selectedKeys}}" disabled="{{disabled}}"/> </s-transfer> <s-switch checkedChildren="disabled" unCheckedChildren="disabled" checked="{{disabled}}" on-change="handleDisable" style="margin-top:16px"/> <s-switch checkedChildren="showSearch" unCheckedChildren="showSearch" checked="{{showSearch}}" on-change="handleShowSearch" style="margin-top:16px"/> </div> '},2842:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E6%A0%91%E7%A9%BF%E6%A2%AD%E6%A1%86">树穿梭框</h4> <p>使用 Tree 组件作为自定义渲染列表。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfer</span>\n            <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;disabled}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;mockData}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">showSelectAll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;false}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleChange<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-transfertree</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>leftRenderList<span class="token punctuation">"</span></span>\n                <span class="token attr-name">selectedKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;selectedKeys}}<span class="token punctuation">"</span></span>\n                <span class="token attr-name">targetKeys</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;targetKeys}}<span class="token punctuation">"</span></span>\n            <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-transfer</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n\n<span class="token keyword">const</span> treeData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'0-0\'</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">\'0-0\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'0-1\'</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token string">\'0-1\'</span><span class="token punctuation">,</span>\n    children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token string">\'0-1-0\'</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">\'0-1-0\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        key<span class="token operator">:</span> <span class="token string">\'0-1-1\'</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">\'0-1-1\'</span>\n    <span class="token punctuation">}</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    key<span class="token operator">:</span> <span class="token string">\'0-2\'</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">\'0-3\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> transferDataSource <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">flatten</span><span class="token punctuation">(</span><span class="token parameter">list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        transferDataSource<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">flatten</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token function">flatten</span><span class="token punctuation">(</span>treeData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> san <span class="token keyword">from</span> <span class="token string">\'san\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Transfer<span class="token punctuation">,</span> Tree<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">isChecked</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selectedKeys<span class="token punctuation">,</span> eventKey</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> selectedKeys<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>eventKey<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> transferTree <span class="token operator">=</span> san<span class="token punctuation">.</span><span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-tree\'</span><span class="token operator">:</span> Tree<span class="token punctuation">,</span>\n        <span class="token string">\'s-treenode\'</span><span class="token operator">:</span> Tree<span class="token punctuation">.</span>TreeNode\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    computed<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token function">checkedKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> selectedKeys <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'selectedKeys\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">const</span> targetKeys <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>selectedKeys<span class="token punctuation">,</span> <span class="token operator">...</span>targetKeys<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleCheck</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>info<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> selectedKey <span class="token operator">=</span> info<span class="token punctuation">.</span>node<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> checkedKeys <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'checkedKeys\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'santd_transfer_itemSelect\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>selectedKey<span class="token punctuation">,</span> checked<span class="token operator">:</span> <span class="token operator">!</span><span class="token function">isChecked</span><span class="token punctuation">(</span>checkedKeys<span class="token punctuation">,</span> selectedKey<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleSelect</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>info<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> selectedKey <span class="token operator">=</span> info<span class="token punctuation">.</span>node<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'key\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> checkedKeys <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'checkedKeys\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">\'santd_transfer_itemSelect\'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>selectedKey<span class="token punctuation">,</span> checked<span class="token operator">:</span> <span class="token operator">!</span><span class="token function">isChecked</span><span class="token punctuation">(</span>checkedKeys<span class="token punctuation">,</span> selectedKey<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">isDisabled</span><span class="token punctuation">(</span><span class="token parameter">checkedKeys<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> checkedKeys<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div>\n        &lt;s-tree\n            blockNode\n            checkable\n            defaultExpandAll\n            checkedKeys="&#123;&#123;checkedKeys}}"\n            on-check="handleCheck"\n            on-select="handleSelect"\n        >\n            &lt;s-treenode key="0-0" title="0-0" disabled="&#123;&#123;isDisabled(targetKeys, \'0-0\')}}">&lt;/s-treenode>\n            &lt;s-treenode key="0-1" title="0-1" disabled="&#123;&#123;isDisabled(targetKeys, \'0-1\')}}">\n                &lt;s-treenode key="0-1-0" title="0-1-0" disabled="&#123;&#123;isDisabled(targetKeys, \'0-1-0\')}}">&lt;/s-treenode>\n                &lt;s-treenode key="0-1-1" title="0-1-1" disabled="&#123;&#123;isDisabled(targetKeys, \'0-1-1\')}}">&lt;/s-treenode>\n            &lt;/s-treenode>\n            &lt;s-treenode key="0-2" title="0-3" disabled="&#123;&#123;isDisabled(targetKeys, \'0-2\')}}">&lt;/s-treenode>\n        &lt;/s-tree>\n    &lt;/div></span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            disabled<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            showSearch<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            mockData<span class="token operator">:</span> transferDataSource<span class="token punctuation">,</span>\n            targetKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-transfer\'</span><span class="token operator">:</span> Transfer<span class="token punctuation">,</span>\n        <span class="token string">\'s-transfertree\'</span><span class="token operator">:</span> transferTree\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>targetKeys<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'targetKeys\'</span><span class="token punctuation">,</span> targetKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},2843:function(n,s){n.exports=' <div> <s-transfer disabled="{{disabled}}" dataSource="{{mockData}}" targetKeys="{{targetKeys}}" showSelectAll="{{false}}" on-change="handleChange"> <s-transfertree slot="leftRenderList" selectedKeys="{{selectedKeys}}" targetKeys="{{targetKeys}}"/> </s-transfer> </div> '},2844:function(n,s){n.exports=' <div class="content"><div class="markdown"><h1 id="transfer-%E7%A9%BF%E6%A2%AD%E6%A1%86">Transfer 穿梭框</h1> <p>双栏穿梭选择框。</p> <h2 id="%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8">何时使用</h2> <ul> <li>需要在多个可选项中进行多选时。</li> <li>比起 Select 和 TreeSelect，穿梭框占据更大的空间，可以展示可选项的更多信息。</li> </ul> <p>穿梭选择框用直观的方式在两栏中移动元素，完成选择行为。</p> <p>选择一个或以上的选项后，点击对应的方向键，可以把选中的选项移动到另一栏。其中，左边一栏为 <code>source</code>，右边一栏为 <code>target</code>，API 的设计也反映了这两个概念。</p> <h2 id="%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA">代码演示</h2> </div></div> '},3452:function(n,s,a){"use strict";a.r(s);var t=a(1),p=a.n(t),e=a(1638),o=a.n(e),c=a(1639),l=a.n(c),u=a(1641),i=a.n(u),k=a(1643),r=a.n(k),d=a(1645),g=a.n(d),h=a(1647),f=a.n(h),m=a(1649),y=a.n(m),b=a(1651),v=a.n(b);s.default=p.a.defineComponent({components:{readme:o.a,basic:l.a,search:i.a,advance:r.a,render:g.a,table:f.a,tree:y.a,head:v.a},template:"\n        <div>\n            <head/>\n            <basic/>\n            <search/>\n            <advance/>\n            <render/>\n            <table/>\n            <tree/>\n            <readme/>\n        </div>\n    "})},594:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,p,e,o=a(2);class c extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"API",hash:"api",children:[{level:3,title:"Transfer",hash:"transfer"},{level:3,title:"leftRenderList & rightRenderList Props",hash:"leftrenderlist-%26-rightrenderlist-props"}]}]})}}e={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},595:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,e,o=a(2),c=a(1640),l=a.n(c);class u extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",e={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},596:function(n,s,a){"use strict";a.r(s);var t=a(0);const p=[];for(let n=0;n<20;n++)p.push({key:n.toString(),title:"content"+(n+1),description:"description of content"+(n+1),disabled:n%3<1});const e=p.filter(n=>+n.key%3>1).map(n=>n.key);s.default={initData:()=>({disabled:!1,mockData:p,targetKeys:e,selectedKeys:[]}),components:{"s-transfer":t.fb,"s-switch":t.Y},handleChange({targetKeys:n,direction:s,moveKeys:a}){this.data.set("targetKeys",n),console.log("targetKeys: ",n),console.log("direction: ",s),console.log("moveKeys: ",a)},handleSearch(n){console.log("on-search",n)},handleSelectChange({sourceSelectedKeys:n,targetSelectedKeys:s}){this.data.set("selectedKeys",[...n,...s]),console.log("sourceSelectedKeys: ",n),console.log("targetSelectedKeys: ",s)},handleScroll({direction:n,e:s}){console.log("direction: ",n),console.log("target: ",s.target)},handleDisable(n){this.data.set("disabled",n)}}},597:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,e,o=a(2),c=a(1642),l=a.n(c);class u extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",e={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},598:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={initData:()=>({mockData:[],targetKeys:[],filterOption:(n,s)=>s.description.indexOf(n)>-1,locale:{itemUnit:"项",itemsUnit:"项",searchPlaceholder:"请输入搜索内容"}}),attached(){this.getMock()},getMock(){const n=[],s=[];for(let a=0;a<20;a++){const t={key:a.toString(),title:"content"+(a+1),description:"description of content"+(a+1),chosen:2*Math.random()>1};t.chosen&&n.push(t.key),s.push(t)}this.data.set("mockData",s),this.data.set("targetKeys",n)},components:{"s-transfer":t.fb},handleChange({targetKeys:n}){this.data.set("targetKeys",n)},handleSearch({direction:n,value:s}){console.log("search: ",n,s)}}},599:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,e,o=a(2),c=a(1644),l=a.n(c);class u extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",e={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},600:function(n,s,a){"use strict";a.r(s);a(1);var t=a(0);s.default={initData:()=>({mockData:[],targetKeys:[]}),attached(){this.getMock()},getMock(){const n=[],s=[];for(let a=0;a<20;a++){const t={key:a.toString(),title:"content"+(a+1),description:"description of content"+(a+1),chosen:2*Math.random()>1};t.chosen&&n.push(t.key),s.push(t)}this.data.set("mockData",s),this.data.set("targetKeys",n)},components:{"s-transfer":t.fb,"s-button":t.i},handleChange({targetKeys:n}){this.data.set("targetKeys",n)}}},601:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,e,o=a(2),c=a(1646),l=a.n(c);class u extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",e={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},602:function(n,s,a){"use strict";a.r(s);a(1);var t=a(0);s.default={initData:()=>({mockData:[],targetKeys:[],listStyle:"width: 250px; height: 300px;"}),attached(){this.getMock()},getMock(){const n=[],s=[];for(let a=0;a<20;a++){const t={key:a.toString(),title:"content"+(a+1),description:"description of content"+(a+1),chosen:2*Math.random()>1};t.chosen&&n.push(t.key),s.push(t)}this.data.set("mockData",s),this.data.set("targetKeys",n)},components:{"s-transfer":t.fb},handleChange({targetKeys:n}){this.data.set("targetKeys",n)}}},603:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,e,o=a(2),c=a(1648),l=a.n(c);class u extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",e={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},604:function(n,s,a){"use strict";a.r(s);var t=a(1),p=a.n(t),e=(a(2839),a(0));const o=["cat","dog","bird"],c=[];for(let n=0;n<20;n++)c.push({key:n.toString(),title:"content"+(n+1),description:"description of content"+(n+1),disabled:n%4==0,tag:o[n%3]});const l=c.filter(n=>+n.key%3>1).map(n=>n.key),u=[{dataIndex:"title",title:"Name"},{dataIndex:"tag",title:"Tag",scopedSlots:{render:"tag"}},{dataIndex:"description",title:"Description"}],i=[{dataIndex:"title",title:"Name"}],k=p.a.defineComponent({components:{"s-table":e.Z,"s-tag":e.bb},initData(){return{rowSelection:{selectedRowKeys:[],handleSelect:this.handleSelectItem.bind(this),handleSelectAll:this.handleSelectAll.bind(this),getCheckboxProps:n=>({disabled:n.disabled})}}},inited(){this.watch("selectedKeys",n=>{this.data.set("rowSelection.selectedRowKeys",n)}),this.watch("disabled",n=>{this.data.set("rowSelection.getCheckboxProps",s=>({disabled:n||s.disabled}))})},computed:{columns(){return"left"===this.data.get("direction")?u:i}},handleSelectAll(n,s){this.data.get("itemSelectAll")(n,s);const a=n.map(({key:n})=>n);this.dispatch("santd_transfer_itemSelectAll",{selectedKeys:a,checkAll:s})},handleSelectItem(n,s){this.data.get("itemSelect")(n.key,s),this.dispatch("santd_transfer_itemSelect",{selectedKey:n.key,checked:s})},template:'<div>\n        <s-table\n            columns="{{columns}}"\n            data="{{filteredItems}}"\n            size="small"\n            rowSelection="{{rowSelection}}"\n        >\n            <span slot="tag">\n                <s-tag>{{text}}</s-tag>\n            </span>\n        </s-table>\n    </div>'});s.default={initData:()=>({disabled:!1,showSearch:!1,mockData:c,targetKeys:l,selectedKeys:[],filterOption:(n,s)=>-1!==s.title.indexOf(n)||-1!==s.tag.indexOf(n),itemSelect:(n,s)=>{console.log("itemSelect_key",n),console.log("itemSelect_ischecked",s)},itemSelectAll:(n,s)=>{console.log("itemSelectAll_key",n),console.log("itemSelectAll_ischecked",s)}}),components:{"s-transfer":e.fb,"s-switch":e.Y,"s-transfertable":k},handleChange({targetKeys:n}){this.data.set("targetKeys",n),this.data.set("selectedKeys",[])},handleDisable(n){this.data.set("disabled",n)},handleShowSearch(n){this.data.set("showSearch",n)}}},605:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,e,o=a(2),c=a(1650),l=a.n(c);class u extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",e={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))},606:function(n,s,a){"use strict";a.r(s);var t=a(1),p=a.n(t),e=a(0);const o=[];!function n(s=[]){s.forEach(s=>{o.push(s),n(s.children)})}([{key:"0-0",title:"0-0"},{key:"0-1",title:"0-1",children:[{key:"0-1-0",title:"0-1-0"},{key:"0-1-1",title:"0-1-1"}]},{key:"0-2",title:"0-3"}]);const c=(n,s)=>-1!==n.indexOf(s),l=p.a.defineComponent({components:{"s-tree":e.gb,"s-treenode":e.gb.TreeNode},computed:{checkedKeys(){return[...this.data.get("selectedKeys"),...this.data.get("targetKeys")]}},handleCheck({info:n}){const s=n.node.data.get("key"),a=this.data.get("checkedKeys");this.dispatch("santd_transfer_itemSelect",{selectedKey:s,checked:!c(a,s)})},handleSelect({info:n}){const s=n.node.data.get("key"),a=this.data.get("checkedKeys");this.dispatch("santd_transfer_itemSelect",{selectedKey:s,checked:!c(a,s)})},isDisabled:(n,s)=>n.includes(s),template:'<div>\n        <s-tree\n            blockNode\n            checkable\n            defaultExpandAll\n            checkedKeys="{{checkedKeys}}"\n            on-check="handleCheck"\n            on-select="handleSelect"\n        >\n            <s-treenode key="0-0" title="0-0" disabled="{{isDisabled(targetKeys, \'0-0\')}}"></s-treenode>\n            <s-treenode key="0-1" title="0-1" disabled="{{isDisabled(targetKeys, \'0-1\')}}">\n                <s-treenode key="0-1-0" title="0-1-0" disabled="{{isDisabled(targetKeys, \'0-1-0\')}}"></s-treenode>\n                <s-treenode key="0-1-1" title="0-1-1" disabled="{{isDisabled(targetKeys, \'0-1-1\')}}"></s-treenode>\n            </s-treenode>\n            <s-treenode key="0-2" title="0-3" disabled="{{isDisabled(targetKeys, \'0-2\')}}"></s-treenode>\n        </s-tree>\n    </div>'});s.default={initData:()=>({disabled:!1,showSearch:!1,mockData:o,targetKeys:[]}),components:{"s-transfer":e.fb,"s-transfertree":l},handleChange({targetKeys:n}){this.data.set("targetKeys",n)}}},607:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,p,e,o=a(2);class c extends o.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"何时使用",hash:"%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8"},{level:2,title:"代码演示",hash:"%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA"}]})}}e={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[p]=e}.call(this,a(4))}});