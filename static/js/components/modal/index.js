!function(n){function s(s){for(var t,e,c=s[0],l=s[1],u=s[2],k=0,r=[];k<c.length;k++)e=c[k],Object.prototype.hasOwnProperty.call(p,e)&&p[e]&&r.push(p[e][0]),p[e]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(n[t]=l[t]);for(i&&i(s);r.length;)r.shift()();return o.push.apply(o,u||[]),a()}function a(){for(var n,s=0;s<o.length;s++){for(var a=o[s],t=!0,c=1;c<a.length;c++){var l=a[c];0!==p[l]&&(t=!1)}t&&(o.splice(s--,1),n=e(e.s=a[0]))}return n}var t={},p={39:0,83:0},o=[];function e(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return n[s].call(a.exports,a,a.exports,e),a.l=!0,a.exports}e.e=function(){return Promise.resolve()},e.m=n,e.c=t,e.d=function(n,s,a){e.o(n,s)||Object.defineProperty(n,s,{enumerable:!0,get:a})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,s){if(1&s&&(n=e(n)),8&s)return n;if(4&s&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(e.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&s&&"string"!=typeof n)for(var t in n)e.d(a,t,function(s){return n[s]}.bind(null,t));return a},e.n=function(n){var s=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(s,"a",s),s},e.o=function(n,s){return Object.prototype.hasOwnProperty.call(n,s)},e.p="/santd/";var c=window.webpackJsonp=window.webpackJsonp||[],l=c.push.bind(c);c.push=s,c=c.slice();for(var u=0;u<c.length;u++)s(c[u]);var i=l;o.push([3473,0,1]),a()}({1e3:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i,"s-modal":t.H},clickHandler(){this.data.set("visible",!0)},initData:()=>({visible:!1}),handleOk(n){console.log(n),this.data.set("visible",!1)},handleCancel(n){console.log(n),this.data.set("visible",!1)},confirm(){t.H.confirm({title:"Confirm",content:"Bla bla ...",okText:"确认",cancelText:"取消"})}}},1001:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2038),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},1002:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i},countDown(){let n=5;const s=t.H.success({title:"This is a notification message",content:`This modal will be destroyed after ${n} second.`});setInterval(()=>{n-=1,s.update({content:`This modal will be destroyed after ${n} second.`})},1e3),setTimeout(()=>s.destroy(),1e3*n)}}},1003:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2040),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},1004:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i,"s-modal":t.H},initData:()=>({modal1Visible:!1,modal2Visible:!1}),setModal1Visible(n){this.data.set("modal1Visible",n)},setModal2Visible(n){this.data.set("modal2Visible",n)}}},1005:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2042),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},1006:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i,"s-modal":t.H},initData:()=>({visible:!1}),showModal(){this.data.set("visible",!0)},handleOk(n){console.log(n),this.data.set("visible",!1)},handleCancel(n){console.log(n),this.data.set("visible",!1)}}},1007:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,p,o,e=a(2);class c extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"API",hash:"api"},{level:2,title:"插槽",hash:"%E6%8F%92%E6%A7%BD",children:[{level:3,title:"Modal.method()",hash:"modal.method()"}]}]})}}o={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},2022:function(n,s,a){var t=a(3),p=a(3248),o=a(986).default;n.exports=a(986),n.exports.default=t(o,p,[])},2023:function(n,s,a){var t=a(3),p=a(3249),o=a(987).default;n.exports=a(987),n.exports.default=t(o,p,[])},2024:function(n,s,a){var t=a(3);a(3250);var p=a(3251),o=a(988).default;n.exports=a(988),n.exports.default=t(o,p,[])},2025:function(n,s,a){var t=a(3),p=a(3252),o=a(989).default;n.exports=a(989),n.exports.default=t(o,p,[])},2026:function(n,s,a){var t=a(3),p=a(3253),o=a(990).default;n.exports=a(990),n.exports.default=t(o,p,[])},2027:function(n,s,a){var t=a(3),p=a(3254),o=a(991).default;n.exports=a(991),n.exports.default=t(o,p,[])},2028:function(n,s,a){var t=a(3),p=a(3255),o=a(992).default;n.exports=a(992),n.exports.default=t(o,p,[])},2029:function(n,s,a){var t=a(3),p=a(3256),o=a(993).default;n.exports=a(993),n.exports.default=t(o,p,[])},2030:function(n,s,a){var t=a(3),p=a(3257),o=a(994).default;n.exports=a(994),n.exports.default=t(o,p,[])},2031:function(n,s,a){var t=a(3),p=a(3258),o=a(995).default;n.exports=a(995),n.exports.default=t(o,p,[])},2032:function(n,s,a){var t=a(3),p=a(3259),o=a(996).default;n.exports=a(996),n.exports.default=t(o,p,[])},2033:function(n,s,a){var t=a(3),p=a(3260),o=a(997).default;n.exports=a(997),n.exports.default=t(o,p,[])},2034:function(n,s,a){var t=a(3),p=a(3261),o=a(998).default;n.exports=a(998),n.exports.default=t(o,p,[])},2035:function(n,s,a){var t=a(3),p=a(3262),o=a(999).default;n.exports=a(999),n.exports.default=t(o,p,[])},2036:function(n,s,a){var t=a(3),p=a(3263),o=a(1e3).default;n.exports=a(1e3),n.exports.default=t(o,p,[])},2037:function(n,s,a){var t=a(3),p=a(3264),o=a(1001).default;n.exports=a(1001),n.exports.default=t(o,p,[])},2038:function(n,s,a){var t=a(3),p=a(3265),o=a(1002).default;n.exports=a(1002),n.exports.default=t(o,p,[])},2039:function(n,s,a){var t=a(3),p=a(3266),o=a(1003).default;n.exports=a(1003),n.exports.default=t(o,p,[])},2040:function(n,s,a){var t=a(3),p=a(3267),o=a(1004).default;n.exports=a(1004),n.exports.default=t(o,p,[])},2041:function(n,s,a){var t=a(3),p=a(3268),o=a(1005).default;n.exports=a(1005),n.exports.default=t(o,p,[])},2042:function(n,s,a){var t=a(3),p=a(3269),o=a(1006).default;n.exports=a(1006),n.exports.default=t(o,p,[])},2043:function(n,s,a){var t=a(3),p=a(3270),o=a(1007).default;n.exports=a(1007),n.exports.default=t(o,p,[])},3248:function(n,s){n.exports=' <div class="content"><div class="markdown"><h1 id="modal-%E5%AF%B9%E8%AF%9D%E6%A1%86">Modal 对话框</h1> <p>模态对话框。</p> <h2 id="%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8">何时使用</h2> <p>需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 <code>modal</code> 在当前页面正中打开一个浮层，承载相应的操作。</p> <p>另外当需要一个简洁的确认框询问用户时，可以使用精心封装好的 <code>modal.confirm()</code> 等方法。</p> <h2 id="%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA">代码演示</h2> </div></div> '},3249:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%9F%BA%E6%9C%AC">基本</h4> <p>第一个对话框。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-basic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickHandler<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Open Modal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Basic Modal<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleOk<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCancel<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-afterClose</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>afterClose<span class="token punctuation">"</span></span>\n            <span class="token attr-name">getContainer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;getContainer}}<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button<span class="token punctuation">,</span>\n        <span class="token string">\'s-modal\'</span><span class="token operator">:</span> Modal\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token function-variable function">getContainer</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'div\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                div<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">\'modal-container\'</span><span class="token punctuation">;</span>\n                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">return</span> div<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleOk</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleCancel</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">afterClose</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'afterClose\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n<span class="token selector">.san-modal p</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3250:function(n,s,a){"use strict";a.r(s)},3251:function(n,s){n.exports=' <div class="demo-basic"> <s-button type="primary" on-click="clickHandler">Open Modal</s-button> <s-modal title="Basic Modal" visible="{=visible=}" on-ok="handleOk" on-cancel="handleCancel" on-afterClose="afterClose" getContainer="{{getContainer}}"> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> </s-modal> </div> '},3252:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%BC%82%E6%AD%A5%E5%85%B3%E9%97%AD">异步关闭</h4> <p>点击确定后异步关闭对话框，例如提交表单。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-async<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickHandler<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Open Modal with async logic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleOk<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCancel<span class="token punctuation">"</span></span>\n            <span class="token attr-name">confirmLoading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;confirmLoading}}<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>&#123;&#123;modalText}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button<span class="token punctuation">,</span>\n        <span class="token string">\'s-modal\'</span><span class="token operator">:</span> Modal\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            modalText<span class="token operator">:</span> <span class="token string">\'Content of the modal\'</span><span class="token punctuation">,</span>\n            confirmLoading<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleOk</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'modalText\'</span><span class="token punctuation">,</span> <span class="token string">\'The modal will be closed after two seconds\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'confirmLoading\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'confirmLoading\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleCancel</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Clicked cancel button\'</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3253:function(n,s){n.exports=' <div class="demo-async"> <s-button type="primary" on-click="clickHandler">Open Modal with async logic</s-button> <s-modal title="Title" visible="{=visible=}" on-ok="handleOk" on-cancel="handleCancel" confirmLoading="{{confirmLoading}}"> <p>{{modalText}}</p> </s-modal> </div> '},3254:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E8%84%9A">自定义页脚</h4> <p>更复杂的例子，自定义了页脚的按钮，点击提交后进入 loading 状态，完成后关闭。不需要默认确定取消按钮时，你可以把 <code>hasFooter</code> 设为 <code>false</code>。(hasFooter=&quot;&#123;&#123;false}}&quot;)</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickHandler<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Open Modal with customized footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleOk<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCancel<span class="token punctuation">"</span></span>\n            <span class="token attr-name">confirmLoading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;confirmLoading}}<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCancel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Return<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;loading}}<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleOk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button<span class="token punctuation">,</span>\n        <span class="token string">\'s-modal\'</span><span class="token operator">:</span> Modal\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            loading<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            visible<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleOk</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'loading\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'loading\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleCancel</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3255:function(n,s){n.exports=' <div class="demo-footer"> <s-button type="primary" on-click="clickHandler">Open Modal with customized footer</s-button> <s-modal title="Title" visible="{=visible=}" on-ok="handleOk" on-cancel="handleCancel" confirmLoading="{{confirmLoading}}"> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> <template slot="footer"> <s-button on-click="handleCancel">Return</s-button> <s-button type="primary" loading="{{loading}}" on-click="handleOk">Submit</s-button> </template> </s-modal> </div> '},3256:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E7%A1%AE%E8%AE%A4%E5%AF%B9%E8%AF%9D%E6%A1%86">确认对话框</h4> <p>使用 <code>confirm()</code> 可以快捷地弹出确认框。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-confirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showConfirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Confirm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showDeleteConfirm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dashed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showPropsConfirm<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dashed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>With extra props<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> confirm <span class="token operator">=</span> Modal<span class="token punctuation">.</span>confirm<span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">showConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Do you Want to delete these items?\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'Some descriptions\'</span><span class="token punctuation">,</span>\n            <span class="token function">onOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'OK\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Cancel\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">showDeleteConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Are you sure delete this task?\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'Some descriptions\'</span><span class="token punctuation">,</span>\n            okText<span class="token operator">:</span> <span class="token string">\'Yes\'</span><span class="token punctuation">,</span>\n            okType<span class="token operator">:</span> <span class="token string">\'danger\'</span><span class="token punctuation">,</span>\n            cancelText<span class="token operator">:</span> <span class="token string">\'No\'</span><span class="token punctuation">,</span>\n            <span class="token function">onOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'OK\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Cancel\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">showPropsConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Are you sure delete this task?\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'Some descriptions\'</span><span class="token punctuation">,</span>\n            okText<span class="token operator">:</span> <span class="token string">\'Yes\'</span><span class="token punctuation">,</span>\n            okType<span class="token operator">:</span> <span class="token string">\'danger\'</span><span class="token punctuation">,</span>\n            okButtonProps<span class="token operator">:</span> <span class="token punctuation">{</span>\n                disabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            cancelText<span class="token operator">:</span> <span class="token string">\'No\'</span><span class="token punctuation">,</span>\n            <span class="token function">onOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'OK\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Cancel\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3257:function(n,s){n.exports=' <div class="demo-confirm"> <s-button on-click="showConfirm">Confirm</s-button> <s-button on-click="showDeleteConfirm" type="dashed">Delete</s-button> <s-button on-click="showPropsConfirm" type="dashed">With extra props</s-button> </div> '},3258:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E7%A1%AE%E8%AE%A4%E5%AF%B9%E8%AF%9D%E6%A1%86">确认对话框</h4> <p>使用 <code>confirm()</code> 可以快捷地弹出确认框。onCancel/onOk 返回 promise 可以延迟关闭</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-confirm-promise<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showConfirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Confirm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> confirm <span class="token operator">=</span> Modal<span class="token punctuation">.</span>confirm<span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">showConfirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Do you Want to delete these items?\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'When clicked the OK button, this dialog will be closed after 1 second\'</span><span class="token punctuation">,</span>\n            <span class="token function">onOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token function">setTimeout</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span> <span class="token operator">?</span> resolve <span class="token operator">:</span> reject<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Oops errors!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Cancel\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3259:function(n,s){n.exports=' <div class="demo-confirm-promise"> <s-button on-click="showConfirm">Confirm</s-button> </div> '},3260:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E4%BF%A1%E6%81%AF%E6%8F%90%E7%A4%BA">信息提示</h4> <p>各种类型的信息提示，只提供一个按钮用于关闭。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Error<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Warning<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> san <span class="token keyword">from</span> <span class="token string">\'san\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> content <span class="token operator">=</span> san<span class="token punctuation">.</span><span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    template<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n        &lt;div>\n            &lt;p>some messages...some messages...&lt;/p>\n            &lt;p>some messages...some messages...&lt;/p>\n        &lt;/div>\n    </span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        Modal<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'This is a notification message\'</span><span class="token punctuation">,</span>\n            content<span class="token punctuation">,</span>\n            <span class="token function">onOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        Modal<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'This is a success message\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'some messages...some messages...\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        Modal<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'This is an error message\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'some messages...some messages...\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">warning</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        Modal<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'This is a warning message\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'some messages...some messages...\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3261:function(n,s){n.exports=' <div class="demo-info"> <s-button on-click="info">Info</s-button> <s-button on-click="success">Success</s-button> <s-button on-click="error">Error</s-button> <s-button on-click="warning">Warning</s-button> </div> '},3262:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E5%9B%BD%E9%99%85%E5%8C%96">国际化</h4> <p>设置 <code>okText</code> 与 <code>cancelText</code> 以自定义按钮文字。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-local<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clickHandler<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Modal<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Modal<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">okText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>确认<span class="token punctuation">"</span></span>\n            <span class="token attr-name">cancelText</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>取消(ESC)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleOk<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCancel<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Bla bla ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Bla bla ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Bla bla ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>confirm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Confirm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button<span class="token punctuation">,</span>\n        <span class="token string">\'s-modal\'</span><span class="token operator">:</span> Modal\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">clickHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            visible<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleOk</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleCancel</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        Modal<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'Confirm\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token string">\'Bla bla ...\'</span><span class="token punctuation">,</span>\n            okText<span class="token operator">:</span> <span class="token string">\'确认\'</span><span class="token punctuation">,</span>\n            cancelText<span class="token operator">:</span> <span class="token string">\'取消\'</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3263:function(n,s){n.exports=' <div class="demo-local"> <s-button type="primary" on-click="clickHandler">Modal</s-button> <s-modal title="Modal" visible="{=visible=}" okText="确认" cancelText="取消(ESC)" on-ok="handleOk" on-cancel="handleCancel"> <p>Bla bla ...</p> <p>Bla bla ...</p> <p>Bla bla ...</p> </s-modal> <br/> <br/> <s-button on-click="confirm">Confirm</s-button> </div> '},3264:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%96%B0%E5%92%8C%E7%A7%BB%E9%99%A4">手动更新和移除</h4> <p>手动更新和关闭 <code>Modal.method</code> 方式创建的对话框。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-manual<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>countDown<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Open modal to close in 5s<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> secondsToGo <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> instance <span class="token operator">=</span> Modal<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            title<span class="token operator">:</span> <span class="token string">\'This is a notification message\'</span><span class="token punctuation">,</span>\n            content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">This modal will be destroyed after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secondsToGo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> second.</span><span class="token template-punctuation string">`</span></span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            secondsToGo <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n            instance<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                content<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">This modal will be destroyed after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>secondsToGo<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> second.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> instance<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> secondsToGo <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3265:function(n,s){n.exports=' <div class="demo-manual"> <s-button on-click="countDown">Open modal to close in 5s</s-button> </div> '},3266:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BD%8D%E7%BD%AE">自定义位置</h4> <p>使用 <code>centered</code> 或 <code>modalStyle</code> 添加top样式来设置对话框位置。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-position<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setModal1Visible(true)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Display a modal dialog at 20px to Top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20px to Top<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=modal1Visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">modalStyle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>top:20px;<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setModal1Visible(false)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setModal1Visible(false)<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setModal2Visible(true)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Vertically centered modal dialog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">centered</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;true}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Vertically centered modal dialog<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=modal2Visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setModal2Visible(false)<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setModal2Visible(false)<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button<span class="token punctuation">,</span>\n        <span class="token string">\'s-modal\'</span><span class="token operator">:</span> Modal\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            modal1Visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            modal2Visible<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">setModal1Visible</span><span class="token punctuation">(</span><span class="token parameter">modal1Visible</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'modal1Visible\'</span><span class="token punctuation">,</span> modal1Visible<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">setModal2Visible</span><span class="token punctuation">(</span><span class="token parameter">modal2Visible</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'modal2Visible\'</span><span class="token punctuation">,</span> modal2Visible<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3267:function(n,s){n.exports=' <div class="demo-position"> <s-button type="primary" on-click="setModal1Visible(true)">Display a modal dialog at 20px to Top</s-button> <s-modal title="20px to Top" visible="{=modal1Visible=}" modalStyle="top:20px;" on-ok="setModal1Visible(false)" on-cancel="setModal1Visible(false)"> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> </s-modal> <br/><br/> <s-button type="primary" on-click="setModal2Visible(true)">Vertically centered modal dialog</s-button> <s-modal centered="{{true}}" title="Vertically centered modal dialog" visible="{=modal2Visible=}" on-ok="setModal2Visible(false)" on-cancel="setModal2Visible(false)"> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> </s-modal> </div> '},3268:function(n,s){n.exports=' <div class="content"><codebox> <code-preview-0 slot="code-preview"></code-preview-0> <section slot="text-place-holder"><h4 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E8%84%9A%E6%8C%89%E9%92%AE%E5%B1%9E%E6%80%A7">自定义页脚按钮属性</h4> <p>传入 <code>okButtonProps</code> 和 <code>cancelButtonProps</code> 可分别自定义确定按钮和取消按钮的 props。</p> </section> <div slot="code-place-holder"> <div class="markdown"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo-button-props<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">on-click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showModal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Open Modal with customized button props<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>s-modal</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Basic Modal<span class="token punctuation">"</span></span>\n            <span class="token attr-name">visible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{=visible=}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">okButtonProps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;{disabled:true}}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">cancelButtonProps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123;{disabled:true}}}<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-ok</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleOk<span class="token punctuation">"</span></span>\n            <span class="token attr-name">on-cancel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleCancel<span class="token punctuation">"</span></span>\n        <span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Some contents...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>s-modal</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span>Modal<span class="token punctuation">,</span> Button<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'santd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    components<span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string">\'s-button\'</span><span class="token operator">:</span> Button<span class="token punctuation">,</span>\n        <span class="token string">\'s-modal\'</span><span class="token operator">:</span> Modal\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">initData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            visible<span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleOk</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">handleCancel</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">\'visible\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre> </div> </div> </codebox> </div> '},3269:function(n,s){n.exports=' <div class="demo-button-props"> <s-button type="primary" on-click="showModal">Open Modal with customized button props</s-button> <s-modal title="Basic Modal" visible="{=visible=}" okButtonProps="{{{disabled:true}}}" cancelButtonProps="{{{disabled:true}}}" on-ok="handleOk" on-cancel="handleCancel"> <p>Some contents...</p> <p>Some contents...</p> <p>Some contents...</p> </s-modal> </div> '},3270:function(n,s){n.exports=' <div class="content"><div class="markdown"><h2 id="api">API</h2> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>bodyStyle</td> <td>modal body 样式</td> <td>string|object</td> <td>{}</td> </tr> <tr> <td>maskStyle</td> <td>遮罩样式</td> <td>string|object</td> <td>{}</td> </tr> <tr> <td>modalStyle</td> <td>可用于设置浮层的样式，调整浮层位置等</td> <td>string|object</td> <td>-</td> </tr> <tr> <td>cancelText</td> <td>取消按钮文字</td> <td>string</td> <td>取消</td> </tr> <tr> <td>centered</td> <td>垂直居中展示 modal</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>closable</td> <td>是否显示右上角的关闭按钮</td> <td>boolean</td> <td>true</td> </tr> <tr> <td>closeIcon</td> <td>自定义关闭图标</td> <td>slot</td> <td>-</td> </tr> <tr> <td>confirmLoading</td> <td>确定按钮 loading</td> <td>boolean</td> <td>无</td> </tr> <tr> <td>getContainer</td> <td>指定 modal 挂载的 HTML 节点</td> <td>(instance): HTMLElement</td> <td>() =&gt; document.body</td> </tr> <tr> <td>hasFooter</td> <td>是否显示底部内容</td> <td>boolean</td> <td>true</td> </tr> <tr> <td>keyboard</td> <td>是否支持键盘esc关闭</td> <td>boolean</td> <td>true</td> </tr> <tr> <td>mask</td> <td>是否展示遮罩</td> <td>boolean</td> <td>true</td> </tr> <tr> <td>maskClosable</td> <td>点击蒙层是否允许关闭</td> <td>boolean</td> <td>true</td> </tr> <tr> <td>okText</td> <td>确认按钮文字</td> <td>string</td> <td>确定</td> </tr> <tr> <td>okType</td> <td>确认按钮类型</td> <td>string</td> <td>primary</td> </tr> <tr> <td>okButtonProps</td> <td>ok 按钮 props</td> <td><a href="/button">ButtonProps</a></td> <td>-</td> </tr> <tr> <td>cancelButtonProps</td> <td>cancel 按钮 props</td> <td><a href="/button">ButtonProps</a></td> <td>-</td> </tr> <tr> <td>title</td> <td>标题</td> <td>string</td> <td>无</td> </tr> <tr> <td>visible</td> <td>对话框是否可见</td> <td>boolean</td> <td>无</td> </tr> <tr> <td>width</td> <td>宽度</td> <td>string|number</td> <td>520</td> </tr> <tr> <td>wrapClassName</td> <td>对话框外层容器的类名</td> <td>string</td> <td>-</td> </tr> <tr> <td>wrapStyle</td> <td>对话框外层容器的样式</td> <td>string|object</td> <td>-</td> </tr> <tr> <td>zIndex</td> <td>设置 modal 的 <code>z-index</code></td> <td>number</td> <td>1000</td> </tr> <tr> <td>on-afterClose</td> <td>modal 完全关闭后的回调</td> <td>function</td> <td>无</td> </tr> <tr> <td>on-cancel</td> <td>点击遮罩层或右上角叉或取消按钮的回调</td> <td>function(e)</td> <td>无</td> </tr> <tr> <td>on-ok</td> <td>点击确定回调</td> <td>function(e)</td> <td>无</td> </tr> </tbody> </table> <h2 id="%E6%8F%92%E6%A7%BD">插槽</h2> <table> <thead> <tr> <th>名称</th> <th>说明</th> </tr> </thead> <tbody> <tr> <td>(default) 默认插槽</td> <td>主体内容</td> </tr> <tr> <td>title</td> <td>头部标题内容</td> </tr> <tr> <td>footer</td> <td>底部内容，当不需要默认底部按钮时，可以设为 <code>hasFooter=false</code></td> </tr> </tbody> </table> <h3 id="modal.method()">Modal.method()</h3> <p>包括：</p> <ul> <li><code>Modal.info</code></li> <li><code>Modal.success</code></li> <li><code>Modal.error</code></li> <li><code>Modal.warning</code></li> <li><code>Modal.confirm</code></li> </ul> <p>以上均为一个函数，参数为 object，具体属性如下：</p> <table> <thead> <tr> <th>参数</th> <th>说明</th> <th>类型</th> <th>默认值</th> </tr> </thead> <tbody> <tr> <td>autoFocusButton</td> <td>指定自动获得焦点的按钮</td> <td>null|string: <code>ok</code> <code>cancel</code></td> <td><code>ok</code></td> </tr> <tr> <td>cancelText</td> <td>取消按钮文字</td> <td>string</td> <td>取消</td> </tr> <tr> <td>centered</td> <td>垂直居中展示 modal</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>className</td> <td>容器类名</td> <td>string</td> <td>-</td> </tr> <tr> <td>content</td> <td>内容</td> <td>string|SanComponent</td> <td>无</td> </tr> <tr> <td>iconType</td> <td>图标 Icon 类型</td> <td>string</td> <td>question-circle</td> </tr> <tr> <td>maskClosable</td> <td>点击蒙层是否允许关闭</td> <td>boolean</td> <td><code>false</code></td> </tr> <tr> <td>okText</td> <td>确认按钮文字</td> <td>string</td> <td>确定</td> </tr> <tr> <td>okType</td> <td>确认按钮类型</td> <td>string</td> <td>primary</td> </tr> <tr> <td>okButtonProps</td> <td>ok 按钮 props</td> <td><a href="/button">ButtonProps</a></td> <td>-</td> </tr> <tr> <td>cancelButtonProps</td> <td>cancel 按钮 props</td> <td><a href="/button">ButtonProps</a></td> <td>-</td> </tr> <tr> <td>title</td> <td>标题</td> <td>string|SanComponent</td> <td>无</td> </tr> <tr> <td>width</td> <td>宽度</td> <td>string|number</td> <td>416</td> </tr> <tr> <td>zIndex</td> <td>设置 modal 的 <code>z-index</code></td> <td>number</td> <td>1000</td> </tr> <tr> <td>onCancel</td> <td>取消回调，参数为关闭函数，返回 promise 时 resolve 后自动关闭</td> <td>function</td> <td>无</td> </tr> <tr> <td>onOk</td> <td>点击确定回调，参数为关闭函数，返回 promise 时 resolve 后自动关闭</td> <td>function</td> <td>无</td> </tr> </tbody> </table> <p>以上函数调用后，会返回一个引用，可以通过该引用更新和关闭弹窗。</p> <pre class="language-js"><code class="language-js"><span class="token keyword">const</span> Modal <span class="token operator">=</span> Modal<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nModal<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">\'修改的标题\'</span><span class="token punctuation">,</span>\n    content<span class="token operator">:</span> <span class="token string">\'修改的内容\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nModal<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> </div></div> '},3473:function(n,s,a){"use strict";a.r(s);var t=a(1),p=a.n(t),o=a(2022),e=a.n(o),c=a(2023),l=a.n(c),u=a(2025),i=a.n(u),k=a(2027),r=a.n(k),d=a(2029),g=a.n(d),m=a(2031),f=a.n(m),b=a(2033),v=a.n(b),h=a(2035),w=a.n(h),y=a(2037),x=a.n(y),C=a(2039),B=a.n(C),E=a(2041),q=a.n(E),M=a(2043),O=a.n(M);s.default=p.a.defineComponent({template:"\n        <div>\n            <head/>\n            <basic/>\n            <async/>\n            <footer/>\n            <confirm/>\n            <confirm2/>\n            <info/>\n            <locale/>\n            <manual/>\n            <position/>\n            <button/>\n            <readme/>\n        </div>\n    ",components:{head:e.a,basic:l.a,async:i.a,footer:r.a,confirm:g.a,confirm2:f.a,info:v.a,locale:w.a,manual:x.a,position:B.a,button:q.a,readme:O.a}})},986:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return c}));var t,p,o,e=a(2);class c extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0,children:[{level:2,title:"何时使用",hash:"%E4%BD%95%E6%97%B6%E4%BD%BF%E7%94%A8"},{level:2,title:"代码演示",hash:"%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA"}]})}}o={},(p="components")in(t=c)?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},987:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2024),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},988:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i,"s-modal":t.H},clickHandler(){this.data.set("visible",!0)},initData:()=>({visible:!1,getContainer:()=>{const n=document.createElement("div");return n.id="modal-container",document.body.appendChild(n),n}}),handleOk(n){console.log(n),this.data.set("visible",!1)},handleCancel(n){console.log(n),this.data.set("visible",!1)},afterClose(){console.log("afterClose")}}},989:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2026),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},990:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i,"s-modal":t.H},clickHandler(){this.data.set("visible",!0)},initData:()=>({visible:!1,modalText:"Content of the modal",confirmLoading:!1}),handleOk(n){this.data.set("modalText","The modal will be closed after two seconds"),this.data.set("confirmLoading",!0),setTimeout(()=>{this.data.set("visible",!1),this.data.set("confirmLoading",!1)},2e3)},handleCancel(n){console.log("Clicked cancel button",n),this.data.set("visible",!1)}}},991:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2028),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},992:function(n,s,a){"use strict";a.r(s);var t=a(0);s.default={components:{"s-button":t.i,"s-modal":t.H},clickHandler(){this.data.set("visible",!0)},initData:()=>({loading:!1,visible:!1}),handleOk(n){this.data.set("loading",!0),setTimeout(()=>{this.data.set("visible",!1),this.data.set("loading",!1)},3e3)},handleCancel(n){console.log(n),this.data.set("visible",!1)}}},993:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2030),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},994:function(n,s,a){"use strict";a.r(s);var t=a(0);const p=t.H.confirm;s.default={components:{"s-button":t.i},showConfirm(){p({title:"Do you Want to delete these items?",content:"Some descriptions",onOk(){console.log("OK")},onCancel(){console.log("Cancel")}})},showDeleteConfirm(){p({title:"Are you sure delete this task?",content:"Some descriptions",okText:"Yes",okType:"danger",cancelText:"No",onOk(){console.log("OK")},onCancel(){console.log("Cancel")}})},showPropsConfirm(){p({title:"Are you sure delete this task?",content:"Some descriptions",okText:"Yes",okType:"danger",okButtonProps:{disabled:!0},cancelText:"No",onOk(){console.log("OK")},onCancel(){console.log("Cancel")}})}}},995:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2032),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},996:function(n,s,a){"use strict";a.r(s);var t=a(0);const p=t.H.confirm;s.default={components:{"s-button":t.i},showConfirm(){p({title:"Do you Want to delete these items?",content:"When clicked the OK button, this dialog will be closed after 1 second",onOk:()=>new Promise((n,s)=>{setTimeout(Math.random()>.5?n:s,1e3)}).catch(()=>console.log("Oops errors!")),onCancel(){console.log("Cancel")}})}}},997:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2034),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))},998:function(n,s,a){"use strict";a.r(s);var t=a(1),p=a.n(t),o=a(0);const e=p.a.defineComponent({template:"\n        <div>\n            <p>some messages...some messages...</p>\n            <p>some messages...some messages...</p>\n        </div>\n    "});s.default={components:{"s-button":o.i},info(){o.H.info({title:"This is a notification message",content:e,onOk(){}})},success(){o.H.success({title:"This is a success message",content:"some messages...some messages..."})},error(){o.H.error({title:"This is an error message",content:"some messages...some messages..."})},warning(){o.H.warning({title:"This is a warning message",content:"some messages...some messages..."})}}},999:function(n,s,a){"use strict";a.r(s),function(n){a.d(s,"default",(function(){return u}));var t,p,o,e=a(2),c=a(2036),l=a.n(c);class u extends e.a{inited(){n.hub&&n.hub.fire&&n.hub.fire("changed",{level:0})}}t=u,p="components",o={"code-preview-0":l.a},p in t?Object.defineProperty(t,p,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[p]=o}.call(this,a(4))}});